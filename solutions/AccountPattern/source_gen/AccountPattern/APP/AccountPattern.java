package AccountPattern.APP;

/*Generated by MPS */

import org.modellwerkstatt.forms.FormCrtl.IGen_Application;
import org.modellwerkstatt.forms.FormCrtl.FMenuFolder;
import org.modellwerkstatt.forms.FormCrtl.FCommandTrigger;
import org.modellwerkstatt.forms.FormsRT.HafinaDefaults;
import org.modellwerkstatt.forms.FormCrtl.IFSelectionController;
import org.modellwerkstatt.manmap.solution.manmapRT.IM3UserEnvironment;
import java.lang.reflect.Method;
import org.apache.log4j.Logger;
import org.apache.log4j.Level;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.modellwerkstatt.objectflow.ObjectFlowRT.IOFXApplicationFactory;
import org.modellwerkstatt.objectflow.ObjectFlowRT.UserEnvironmentInformation;
import java.lang.reflect.InvocationTargetException;

public class AccountPattern implements IGen_Application {


  public AccountPattern() {
  }



  public FMenuFolder getStartMenu() {
    FMenuFolder startMenu = new FMenuFolder();
    startMenu.add(new FMenuFolder.GenHelper() {
      public void addChildren(FMenuFolder current) {
        current.add(new FCommandTrigger("__accountProc", "AccountPattern.APP.Create_new_entry", "Create new entry", HafinaDefaults.ICON_NEW, null, new String[]{"AccountPattern.APP.NewEntryFc"}) {
          public Object[][] calculateParams(IFSelectionController crtl) {
            return new Object[][]{{null}, {}};
          }
        });
      }
    });
    return startMenu;
  }

  public FMenuFolder getExtrasMenu() {
    FMenuFolder startMenu = new FMenuFolder();
    startMenu.add(new FMenuFolder.GenHelper() {
      public void addChildren(FMenuFolder current) {
      }
    });
    return startMenu;
  }



  public String getApplicationVersion() {
    return "0.0.1";
  }



  public IGen_Application.Startup getStartupMethod() {
    return new IGen_Application.Startup() {
      public boolean startup(String username, String password, IM3UserEnvironment userEnvironment) {
        return true;
      }
    };
  }




  public static void main(String[] args) throws NoSuchMethodException {
    ClassLoader cl = AccountPattern.class.getClassLoader();
    Class classWithMain;
    Method m;

    try {
      // init spring ioc first : ) 
      Logger.getRootLogger().setLevel(Level.ERROR);

      ApplicationContext context = new ClassPathXmlApplicationContext("AccountPattern/APP/Lola_Configuration.xml");
      IOFXApplicationFactory factory = context.getBean(IOFXApplicationFactory.class);
      UserEnvironmentInformation env = context.getBean(UserEnvironmentInformation.class);

      if (factory == null || env == null) {
        throw new ClassNotFoundException("map_Application: config error - factory or userenvironment is null!");
      }

      // looks a bit complicated due to JavaFx startump 
      if (cl == null) {
        throw new ClassNotFoundException("map_Application: config error - classLoader is null! ");
      }

      classWithMain = cl.loadClass(factory.getClassFqName2Run());
      m = classWithMain.getMethod("run", IGen_Application.class, IOFXApplicationFactory.class, UserEnvironmentInformation.class);
      m.invoke(null, new AccountPattern(), factory, env);

    } catch (ClassNotFoundException cnfe) {
      cnfe.printStackTrace();
      throw new RuntimeException(cnfe);

    } catch (InvocationTargetException e) {
      e.printStackTrace();
      throw new RuntimeException(e);

    } catch (IllegalAccessException e) {
      e.printStackTrace();
      throw new RuntimeException(e);

    }
  }
}
