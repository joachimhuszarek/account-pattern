package AccountPattern.APP;

/*Generated by MPS */

import javax.sql.DataSource;
import org.springframework.jdbc.core.JdbcTemplate;
import org.modellwerkstatt.manmap.solution.manmapRT.MMTypeHandlers;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.modellwerkstatt.manmap.solution.manmapRT.IM3ClassMapper;
import org.modellwerkstatt.objectflow.ObjectFlowRT.IOFXSession;

public class AccountRepo {
  private DataSource dataSource;
  private JdbcTemplate jdbcTemplate;
  private MMTypeHandlers __mmTypeHandlers;

  @Autowired
  @Qualifier("AccountPattern.APP.MapAcc_StockEntry")
  private IM3ClassMapper<Acc_StockEntry, Integer> _MapAcc_StockEntry_0;
  @Autowired
  @Qualifier("AccountPattern.APP.MapAcc_StockKeepingUnit")
  private IM3ClassMapper<Acc_StockKeepingUnit, Integer> _MapAcc_StockKeepingUnit_2;





  @Autowired
  public AccountRepo(DataSource ds, MMTypeHandlers typeHandlers) {
    dataSource = ds;
    __mmTypeHandlers = typeHandlers;
  }

  public void checkinStockEntry(Acc_StockEntry entry, IOFXSession __manMapSession) {
    if (entry.getDirty()) {
      // check for readOnly session 
      if (__manMapSession != null && __manMapSession.isReadOnly()) {
        throw new RuntimeException("Can not execute insert/update, session marked readOnly. Entity is " + entry);
      }
      if (entry.getKey() <= 0) {
        _MapAcc_StockEntry_0.insert(entry, __manMapSession, true);
      } else {
        _MapAcc_StockEntry_0.update(entry, __manMapSession, true);
      }
      if (__manMapSession != null) {
        __manMapSession.addTransactionEntity(entry);
      }

    }
  }

  public void checkinSKU(Acc_StockKeepingUnit sku, IOFXSession __manMapSession) {
    if (sku.getDirty()) {
      // check for readOnly session 
      if (__manMapSession != null && __manMapSession.isReadOnly()) {
        throw new RuntimeException("Can not execute insert/update, session marked readOnly. Entity is " + sku);
      }
      if (sku.getKey() <= 0) {
        _MapAcc_StockKeepingUnit_2.insert(sku, __manMapSession, true);
      } else {
        _MapAcc_StockKeepingUnit_2.update(sku, __manMapSession, true);
      }
      if (__manMapSession != null) {
        __manMapSession.addTransactionEntity(sku);
      }

    }
  }
}
